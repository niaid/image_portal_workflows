# Welcome to your prefect.yaml file! You can use this file for storing and managing
# configuration for deploying your flows. We recommend committing this file to source
# control along with your flow code.

# Generic metadata about this project
name: image_portal_workflows
prefect-version: 2.13.6

# build section allows you to manage and build docker images
build:

# push section allows you to manage if and how this project is uploaded to remote locations
push:

# pull section allows you to provide instructions for cloning this project in remote locations
# https://docs.prefect.io/latest/api-ref/prefect/deployments/steps/pull/#prefect.deployments.steps.pull.set_working_directory
pull:
- prefect.deployments.steps.set_working_directory:
    directory: /gs1/home/hedwig_prod/image_portal_workflows
# - prefect.deployments.steps.git_clone:
#     repository: git@github.com:niaid/image_portal_workflows.git
#     branch: feature/prefect2
#     include_submodules: true

definitions:
  work_pools:
    dask_work_pool: &dask_work_pool
      name: workpool
      work_queue_name:
      job_variables: {}
  tags:
    hedwig_tags: &hedwig_tags
      - hedwig
      - image_portal_workflows

# the deployments section allows you to provide configuration for deploying flows
# TODO: change deployment names
deployments:
- name: hedwig
  version:
  tags: *hedwig_tags
  description: |-
    Convert 2D dm, tiff, mrc, jpeg, png to keyimage and thumbnails
  entrypoint: em_workflows/dm_conversion/flow.py:dm_flow
  parameters: {}
  work_pool: *dask_work_pool
  schedule:
- name: hedwig
  version:
  tags: *hedwig_tags
  description: |-
    Convert large png files to neuroglancer assets (along with key/thumb images)
  entrypoint: em_workflows/lrg_2d_rgb/flow.py:lrg_2d_flow
  parameters: {}
  work_pool: *dask_work_pool
  schedule:
- name: hedwig
  version:
  tags: *hedwig_tags
  description: |-
    Convert fib-sem to neuroglancer assets (along with key/thumb images)
  entrypoint: em_workflows/sem_tomo/flow.py:sem_tomo_flow
  parameters: {}
  work_pool: *dask_work_pool
  schedule:
- name: hedwig
  version:
  tags: *hedwig_tags
  description: |-
    Convert mrc & st images using adoc templates to generate alignment and reconstrcuted movies. The average of reconstructed movie creates neuroglancer asset.
  entrypoint: em_workflows/brt/flow.py:brt_flow
  parameters: {}
  work_pool: *dask_work_pool
  schedule:
- name: hedwig
  version:
  tags: *hedwig_tags
  description: |-
    Convert czi images to neuroglancer assets
  entrypoint: em_workflows/czi/flow.py:czi_flow
  parameters: {}
  work_pool: *dask_work_pool
  schedule:
- name: hedwig
  version:
  tags: *hedwig_tags
  description: Runs pytests regularly and uploads coverage as artifacts
  entrypoint: em_workflows/test_runner/flow.py:pytest_flow
  parameters: {}
  work_pool: *dask_work_pool
  schedule:
    cron: 0 0 * * 1,3
    timezone: UTC
    day_or: true
